{"ast":null,"code":"import _toConsumableArray from \"/var/www/html/MERN/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/var/www/html/MERN/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  items: []\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"get\":\n      return _objectSpread({}, state, {\n        items: action.payload\n      });\n\n    case \"add\":\n      return _objectSpread({}, state, {\n        items: [action.payload].concat(_toConsumableArray(state.items))\n      });\n\n    case \"remove\":\n      return _objectSpread({}, state, {\n        items: state.items.filter(function (item) {\n          return item.id !== action.payload;\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/var/www/html/MERN/client/src/reducers/rootReducer.js"],"names":["initialState","items","rootReducer","state","action","type","payload","filter","item","id"],"mappings":";;AAEA,IAAIA,YAAY,GAAC;AAEZC,EAAAA,KAAK,EAAC;AAFM,CAAjB;;AAMA,IAAMC,WAAW,GAAC,SAAZA,WAAY,GAA6B;AAAA,MAA5BC,KAA4B,uEAAtBH,YAAsB;AAAA,MAATI,MAAS;;AAE/C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,KAAL;AACA,+BAAWF,KAAX;AAAiBF,QAAAA,KAAK,EAACG,MAAM,CAACE;AAA9B;;AAGA,SAAK,KAAL;AACA,+BAAWH,KAAX;AAAiBF,QAAAA,KAAK,GAAEG,MAAM,CAACE,OAAT,4BAAoBH,KAAK,CAACF,KAA1B;AAAtB;;AACA,SAAK,QAAL;AACA,+BAAWE,KAAX;AACIF,QAAAA,KAAK,EAACE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmB,UAAAC,IAAI;AAAA,iBAAEA,IAAI,CAACC,EAAL,KAAUL,MAAM,CAACE,OAAnB;AAAA,SAAvB;AADV;;AAGA;AACJ,aAAOH,KAAP;AAbA;AAgBC,CAlBD;;AAmBA,eAAeD,WAAf","sourcesContent":["\n\nvar initialState={\n \n     items:[\n     ]\n\n}\nconst rootReducer=(state=initialState,action)=>{\n\nswitch(action.type){\n\n    case \"get\":\n    return {...state,items:action.payload}\n     ;\n    \n    case \"add\":\n    return {...state,items:[action.payload,...state.items]};\n    case \"remove\":\n    return {...state,\n        items:state.items.filter(item=>item.id!==action.payload)    \n    };\n    default:\nreturn state;\n}\n\n}\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}